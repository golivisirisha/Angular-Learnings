{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { Subject, throwError } from 'rxjs';\nimport { LoggingService } from './logging.service';\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.loggingService = inject(LoggingService);\n    this.errorSubject = new Subject();\n  }\n  CreateTask(task) {\n    this.http.post('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json', task).pipe(catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n      // this.fetchAllTasks();\n    });\n  }\n\n  DeleteTask(id) {\n    this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/' + id + '.json').pipe(catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n      // this.fetchAllTasks();\n    });\n  }\n\n  DeleteAllTask() {\n    this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json', {\n      observe: 'events'\n    }).pipe(tap(() => {}, catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n      // this.fetchAllTasks();\n    }));\n  }\n\n  GetAlltasks() {\n    let headers = new HttpHeaders();\n    headers = headers.set('content-type', 'application/json');\n    headers = headers.set('content-type', 'html/json');\n    return this.http.get('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json', {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map(response => {\n      //trasforming data\n      let tasks = [];\n      console.log(response);\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    }), catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    }));\n  }\n  UpdateTask(id, data) {\n    this.http.put('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks' + id + '.json', data).pipe(catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe();\n  }\n  getTaskDetails(id) {\n    return this.http.get('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks' + id + '.json').pipe(map(response => {\n      console.log(response);\n      let task = {};\n      task = {\n        ...response,\n        id: id\n      };\n      return task;\n    }));\n    // .subscribe((task)=>{\n    //     console.log(task);\n    // });\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","HttpHeaders","map","catchError","tap","Subject","throwError","LoggingService","TaskService","constructor","http","loggingService","errorSubject","CreateTask","task","post","pipe","err","errorObj","statusCode","status","errorMessage","message","dateTime","Date","logError","subscribe","error","next","DeleteTask","id","delete","DeleteAllTask","observe","GetAlltasks","headers","set","get","response","tasks","console","log","key","hasOwnProperty","push","UpdateTask","data","put","getTaskDetails","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-HttpClient\\src\\app\\Services\\task.service.ts"],"sourcesContent":["import {Injectable,inject} from '@angular/core';\r\nimport { HttpClient,HttpErrorResponse ,HttpHeaders} from '@angular/common/http';\r\nimport { Task } from 'src/Models/Task';\r\nimport {map,catchError,tap} from 'rxjs/operators';\r\nimport {Subject,throwError} from 'rxjs';\r\nimport {LoggingService} from './logging.service';\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\n\r\nexport class TaskService{\r\n\r\n    http:HttpClient=inject(HttpClient);\r\n    loggingService:LoggingService=inject(LoggingService);\r\n    errorSubject=new Subject<HttpErrorResponse>();\r\n\r\n    CreateTask(task:Task){\r\n        this.http.post<{name:string}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',task)\r\n        .pipe(catchError((err)=>{\r\n            //write the logic to log errors.\r\n            const errorObj={statusCode:err.status,errorMessage:err.message,dateTime:new Date()};\r\n            this.loggingService.logError(errorObj);\r\n    \r\n            return throwError(()=>err);\r\n    \r\n    \r\n        }))\r\n   .subscribe({error:(err)=>{\r\n    this.errorSubject.next(err);\r\n\r\n   }\r\n    // this.fetchAllTasks();\r\n    });\r\n\r\n}\r\n\r\n    DeleteTask(id:string |undefined){\r\n        this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/'+ id +'.json')\r\n        .pipe(catchError((err)=>{\r\n            //write the logic to log errors.\r\n            const errorObj={statusCode:err.status,errorMessage:err.message,dateTime:new Date()};\r\n            this.loggingService.logError(errorObj);\r\n    \r\n            return throwError(()=>err);\r\n    \r\n    \r\n        }))\r\n    \r\n        .subscribe({error:(err)=>{\r\n        this.errorSubject.next(err);\r\n    \r\n       }\r\n        // this.fetchAllTasks();\r\n        });\r\n\r\n\r\n\r\n}\r\n\r\n    DeleteAllTask(){\r\n        this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',{observe:'events'})\r\n        .pipe(tap(()=>{}, catchError((err)=>{\r\n            //write the logic to log errors.\r\n            const errorObj={statusCode:err.status,errorMessage:err.message,dateTime:new Date()};\r\n            this.loggingService.logError(errorObj);\r\n    \r\n            return throwError(()=>err);\r\n    \r\n    \r\n        }))\r\n        \r\n        .subscribe({error:(err)=>{\r\n            this.errorSubject.next(err);\r\n        \r\n           }\r\n            // this.fetchAllTasks();\r\n            });\r\n       \r\n\r\n    }\r\n\r\n    GetAlltasks(){\r\n        let headers=new HttpHeaders();\r\n        headers= headers.set('content-type','application/json');\r\n        headers= headers.set('content-type','html/json');\r\n        \r\n       return this.http.get<{[key:string]:Task}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json'\r\n        ,{headers:headers,observe:'response'})\r\n    .pipe(map((response)=>{\r\n\r\n      //trasforming data\r\n      let tasks=[];\r\n      console.log(response);\r\n\r\n      for(let key in response){\r\n        if(response.hasOwnProperty(key)){\r\n          tasks.push({...response[key],id:key});\r\n\r\n        }\r\n       \r\n      }\r\n\r\n      return tasks;\r\n\r\n    }),catchError((err)=>{\r\n        //write the logic to log errors.\r\n        const errorObj={statusCode:err.status,errorMessage:err.message,dateTime:new Date()};\r\n        this.loggingService.logError(errorObj);\r\n\r\n        return throwError(()=>err);\r\n\r\n\r\n    }))\r\n    \r\n    }\r\n    UpdateTask(id: string | undefined,data:Task){\r\n        this.http.put('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks'+id+'.json',data)\r\n        .pipe(catchError((err)=>{\r\n            //write the logic to log errors.\r\n            const errorObj={statusCode:err.status,errorMessage:err.message,dateTime:new Date()};\r\n            this.loggingService.logError(errorObj);\r\n    \r\n            return throwError(()=>err);\r\n    \r\n    \r\n        }))\r\n        .subscribe();\r\n\r\n    }\r\n\r\n    getTaskDetails(id:string | undefined){\r\n      \r\n       return this.http.get('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks'+id+'.json')\r\n        .pipe(map((response)=>{\r\n            console.log(response);\r\n            let task={};\r\n            task={...response,id:id}\r\n            return task;\r\n\r\n        })) \r\n        // .subscribe((task)=>{\r\n        //     console.log(task);\r\n        // });\r\n\r\n    }\r\n    \r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}