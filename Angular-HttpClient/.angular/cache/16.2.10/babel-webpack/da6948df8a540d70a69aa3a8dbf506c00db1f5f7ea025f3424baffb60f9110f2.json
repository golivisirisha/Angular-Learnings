{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpEventType } from \"@angular/common/http\";\nimport { map, catchError, tap } from \"rxjs/operators\";\nimport { Subject, throwError } from \"rxjs\";\nimport { LoggingService } from \"./logging.service\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.loggingService = inject(LoggingService);\n    this.errorSubject = new Subject();\n  }\n  CreateTask(task) {\n    this.http.post(\"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json\", task).pipe(catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n      // this.fetchAllTasks();\n    });\n  }\n\n  DeleteTask(id) {\n    this.http.delete(\"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/\" + id + \".json\").pipe(catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n      // this.fetchAllTasks();\n    });\n  }\n\n  DeleteAllTask() {\n    this.http.delete(\"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json\", {\n      observe: \"events\"\n    }).pipe(tap(event => {\n      console.log(event);\n      if (event.type === HttpEventType.Response) {}\n    }, catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    }))).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n      // this.fetchAllTasks();\n    });\n  }\n\n  GetAlltasks() {\n    let headers = new HttpHeaders();\n    headers = headers.set(\"content-type\", \"application/json\");\n    headers = headers.set(\"content-type\", \"html/json\");\n    return this.http.get(\"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json\", {\n      headers: headers,\n      observe: \"response\"\n    }).pipe(map(response => {\n      //trasforming data\n      let tasks = [];\n      console.log(response);\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    }), catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    }));\n  }\n  UpdateTask(id, data) {\n    this.http.put(\"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks\" + id + \".json\", data).pipe(catchError(err => {\n      //write the logic to log errors.\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        dateTime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe();\n  }\n  getTaskDetails(id) {\n    return this.http.get(\"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks\" + id + \".json\").pipe(map(response => {\n      console.log(response);\n      let task = {};\n      task = {\n        ...response,\n        id: id\n      };\n      return task;\n    }));\n    // .subscribe((task)=>{\n    //     console.log(task);\n    // });\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["inject","HttpClient","HttpHeaders","HttpEventType","map","catchError","tap","Subject","throwError","LoggingService","TaskService","constructor","http","loggingService","errorSubject","CreateTask","task","post","pipe","err","errorObj","statusCode","status","errorMessage","message","dateTime","Date","logError","subscribe","error","next","DeleteTask","id","delete","DeleteAllTask","observe","event","console","log","type","Response","GetAlltasks","headers","set","get","response","tasks","key","hasOwnProperty","push","UpdateTask","data","put","getTaskDetails","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-HttpClient\\src\\app\\Services\\task.service.ts"],"sourcesContent":["import { Injectable, inject } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n  HttpEventType,\r\n} from \"@angular/common/http\";\r\nimport { Task } from \"src/Models/Task\";\r\nimport { map, catchError, tap } from \"rxjs/operators\";\r\nimport { Subject, throwError } from \"rxjs\";\r\nimport { LoggingService } from \"./logging.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TaskService {\r\n  http: HttpClient = inject(HttpClient);\r\n  loggingService: LoggingService = inject(LoggingService);\r\n  errorSubject = new Subject<HttpErrorResponse>();\r\n\r\n  CreateTask(task: Task) {\r\n    this.http\r\n      .post<{ name: string }>(\r\n        \"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json\",\r\n        task\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          //write the logic to log errors.\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            dateTime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n        // this.fetchAllTasks();\r\n      });\r\n  }\r\n\r\n  DeleteTask(id: string | undefined) {\r\n    this.http\r\n      .delete(\r\n        \"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/\" +\r\n          id +\r\n          \".json\"\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          //write the logic to log errors.\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            dateTime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n        // this.fetchAllTasks();\r\n      });\r\n  }\r\n\r\n  DeleteAllTask() {\r\n    this.http\r\n      .delete(\r\n        \"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json\",\r\n        { observe: \"events\" }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (event) => {\r\n            console.log(event);\r\n            if (event.type === HttpEventType.Response) {\r\n            }\r\n          },\r\n          catchError((err) => {\r\n            //write the logic to log errors.\r\n            const errorObj = {\r\n              statusCode: err.status,\r\n              errorMessage: err.message,\r\n              dateTime: new Date(),\r\n            };\r\n            this.loggingService.logError(errorObj);\r\n\r\n            return throwError(() => err);\r\n          })\r\n        )\r\n      )\r\n\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n        // this.fetchAllTasks();\r\n      });\r\n  }\r\n\r\n  GetAlltasks() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.set(\"content-type\", \"application/json\");\r\n    headers = headers.set(\"content-type\", \"html/json\");\r\n\r\n    return this.http\r\n      .get<{ [key: string]: Task }>(\r\n        \"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json\",\r\n        { headers: headers, observe: \"response\" }\r\n      )\r\n      .pipe(\r\n        map((response) => {\r\n          //trasforming data\r\n          let tasks = [];\r\n          console.log(response);\r\n\r\n          for (let key in response) {\r\n            if (response.hasOwnProperty(key)) {\r\n              tasks.push({ ...response[key], id: key });\r\n            }\r\n          }\r\n\r\n          return tasks;\r\n        }),\r\n        catchError((err) => {\r\n          //write the logic to log errors.\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            dateTime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n\r\n          return throwError(() => err);\r\n        })\r\n      );\r\n  }\r\n  UpdateTask(id: string | undefined, data: Task) {\r\n    this.http\r\n      .put(\r\n        \"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks\" +\r\n          id +\r\n          \".json\",\r\n        data\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          //write the logic to log errors.\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            dateTime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getTaskDetails(id: string | undefined) {\r\n    return this.http\r\n      .get(\r\n        \"https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks\" +\r\n          id +\r\n          \".json\"\r\n      )\r\n      .pipe(\r\n        map((response) => {\r\n          console.log(response);\r\n          let task = {};\r\n          task = { ...response, id: id };\r\n          return task;\r\n        })\r\n      );\r\n    // .subscribe((task)=>{\r\n    //     console.log(task);\r\n    // });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}