{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { Component, inject } from '@angular/core';\nimport { map } from 'rxjs/operators';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n  }\n  ngOnInit() {\n    this.fetchAllTasks();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  CreateTask(data) {\n    // const headers=new HttpHeaders({'my-header':'hello-world'})\n    this.http.post('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json', data).subscribe(response => {\n      console.log(response);\n    });\n    this.fetchAllTasks();\n  }\n  fetchAllTasks() {\n    this.http.get('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json').pipe(map(response => {\n      //trasforming data\n      let tasks = [];\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    })).subscribe(tasks => {\n      this.allTasks = tasks;\n      // console.log(tasks);\n    });\n  }\n};\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["HttpClient","Component","inject","map","DashboardComponent","constructor","showCreateTaskForm","http","allTasks","ngOnInit","fetchAllTasks","OpenCreateTaskForm","CloseCreateTaskForm","CreateTask","data","post","subscribe","response","console","log","get","pipe","tasks","key","hasOwnProperty","push","id","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-HttpClient\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output, inject } from '@angular/core';\r\nimport { Task } from 'src/Models/Task';\r\nimport{map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit{\r\n  showCreateTaskForm: boolean = false;\r\n  http:HttpClient=inject(HttpClient);\r\n  allTasks:Task[]=[];\r\n\r\n\r\n\r\n\r\n  ngOnInit(){\r\n    this.fetchAllTasks();\r\n\r\n  }\r\n  \r\n\r\n  OpenCreateTaskForm(){\r\n    this.showCreateTaskForm = true;\r\n  }\r\n\r\n  CloseCreateTaskForm(){\r\n    this.showCreateTaskForm = false;\r\n  }\r\n  CreateTask(data:Task){\r\n    // const headers=new HttpHeaders({'my-header':'hello-world'})\r\n   this.http.post<{name:string}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',data)\r\n   .subscribe((response)=>{\r\n    console.log(response);\r\n   });\r\n   this.fetchAllTasks();\r\n\r\n  } \r\n\r\n  private fetchAllTasks(){\r\n    this.http.get<{[key:string]:Task}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\r\n    .pipe(map((response)=>{\r\n\r\n      //trasforming data\r\n      let tasks=[];\r\n\r\n      for(let key in response){\r\n        if(response.hasOwnProperty(key)){\r\n          tasks.push({...response[key],id:key});\r\n\r\n        }\r\n       \r\n      }\r\n\r\n      return tasks;\r\n\r\n    }))\r\n    .subscribe((tasks)=>{\r\n      this.allTasks=tasks;\r\n      // console.log(tasks);\r\n    });\r\n\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAoB,sBAAsB;AAC7D,SAASC,SAAS,EAAgCC,MAAM,QAAQ,eAAe;AAE/E,SAAOC,GAAG,QAAO,gBAAgB;AAO1B,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAAxBC,YAAA;IACL,KAAAC,kBAAkB,GAAY,KAAK;IACnC,KAAAC,IAAI,GAAYL,MAAM,CAACF,UAAU,CAAC;IAClC,KAAAQ,QAAQ,GAAQ,EAAE;EAoDpB;EA/CEC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EAEtB;EAGAC,kBAAkBA,CAAA;IAChB,IAAI,CAACL,kBAAkB,GAAG,IAAI;EAChC;EAEAM,mBAAmBA,CAAA;IACjB,IAAI,CAACN,kBAAkB,GAAG,KAAK;EACjC;EACAO,UAAUA,CAACC,IAAS;IAClB;IACD,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAgB,0EAA0E,EAACD,IAAI,CAAC,CAC7GE,SAAS,CAAEC,QAAQ,IAAG;MACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACtB,CAAC,CAAC;IACF,IAAI,CAACP,aAAa,EAAE;EAErB;EAEQA,aAAaA,CAAA;IACnB,IAAI,CAACH,IAAI,CAACa,GAAG,CAAsB,0EAA0E,CAAC,CAC7GC,IAAI,CAAClB,GAAG,CAAEc,QAAQ,IAAG;MAEpB;MACA,IAAIK,KAAK,GAAC,EAAE;MAEZ,KAAI,IAAIC,GAAG,IAAIN,QAAQ,EAAC;QACtB,IAAGA,QAAQ,CAACO,cAAc,CAACD,GAAG,CAAC,EAAC;UAC9BD,KAAK,CAACG,IAAI,CAAC;YAAC,GAAGR,QAAQ,CAACM,GAAG,CAAC;YAACG,EAAE,EAACH;UAAG,CAAC,CAAC;;;MAMzC,OAAOD,KAAK;IAEd,CAAC,CAAC,CAAC,CACFN,SAAS,CAAEM,KAAK,IAAG;MAClB,IAAI,CAACd,QAAQ,GAACc,KAAK;MACnB;IACF,CAAC,CAAC;EAEJ;CACD;;AAvDYlB,kBAAkB,GAAAuB,UAAA,EAL9B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW1B,kBAAkB,CAuD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}