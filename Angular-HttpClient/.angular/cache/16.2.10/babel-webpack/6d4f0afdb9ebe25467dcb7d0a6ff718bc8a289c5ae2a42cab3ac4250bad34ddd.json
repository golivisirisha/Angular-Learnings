{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { Component, inject } from '@angular/core';\nimport { TaskService } from '../Services/task.service';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n    this.taskService = inject(TaskService);\n    this.editMode = false;\n    this.currentTaskId = '';\n  }\n  ngOnInit() {\n    this.fetchAllTasks();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n    this.editMode = false;\n    this.selectedTask = {\n      title: '',\n      desc: '',\n      assignedTo: '',\n      createdAt: '',\n      priority: '',\n      status: ''\n    };\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  CreateOrUpdateTask(data) {\n    if (!this.editMode) this.taskService.CreateTask(data);else {\n      //task edit\n      this.taskService.UpdateTask(this.currentTaskId, data);\n    }\n    // const headers=new HttpHeaders({'my-header':'hello-world'})\n    //  this.http.post<{name:string}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',data)\n    //  .subscribe((response)=>{\n    //   console.log(response);\n    //   this.fetchAllTasks();\n    //  });\n  }\n\n  FetchAllTaskClicked() {\n    this.fetchAllTasks();\n  }\n  fetchAllTasks() {\n    // this.http.get<{[key:string]:Task}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\n    // .pipe(map((response)=>{\n    //   //trasforming data\n    //   let tasks=[];\n    //   for(let key in response){\n    //     if(response.hasOwnProperty(key)){\n    //       tasks.push({...response[key],id:key});\n    //     }\n    //   }\n    //   return tasks;\n    // }))\n    this.taskService.GetAlltasks().subscribe(tasks => {\n      this.allTasks = tasks;\n      // console.log(tasks);\n    });\n  }\n\n  DeleteTask(id) {\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/'+ id +'.json')\n    // .subscribe((res)=>{\n    //   this.fetchAllTasks();\n    // })\n    this.taskService.DeleteTask(id);\n  }\n  DeleteAllTasks() {\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\n    // .subscribe((res)=>{\n    //    this.fetchAllTasks();\n    // })\n    this.taskService.DeleteAllTask();\n  }\n  OnEditTaskClicked(id) {\n    this.currentTaskId = id;\n    //open edit task form\n    this.showCreateTaskForm = true;\n    this.editMode = true;\n    this.selectedTask = this.allTasks.find(task => {\n      return task.id === id;\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["HttpClient","Component","inject","TaskService","DashboardComponent","constructor","showCreateTaskForm","http","allTasks","taskService","editMode","currentTaskId","ngOnInit","fetchAllTasks","OpenCreateTaskForm","selectedTask","title","desc","assignedTo","createdAt","priority","status","CloseCreateTaskForm","CreateOrUpdateTask","data","CreateTask","UpdateTask","FetchAllTaskClicked","GetAlltasks","subscribe","tasks","DeleteTask","id","DeleteAllTasks","DeleteAllTask","OnEditTaskClicked","find","task","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-HttpClient\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output, inject } from '@angular/core';\r\nimport { Task } from 'src/Models/Task';\r\nimport{map} from 'rxjs/operators';\r\nimport { TaskService } from '../Services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit{\r\n  showCreateTaskForm: boolean = false;\r\n  http:HttpClient=inject(HttpClient);\r\n  allTasks:Task[]=[];\r\n  taskService:TaskService=inject(TaskService);\r\n\r\n  editMode:boolean=false;\r\n\r\n  selectedTask:Task;\r\n  currentTaskId:string='';\r\n\r\n\r\n\r\n\r\n  ngOnInit(){\r\n    this.fetchAllTasks();\r\n\r\n  }\r\n  \r\n\r\n  OpenCreateTaskForm(){\r\n    this.showCreateTaskForm = true;\r\n    this.editMode=false;\r\n    this.selectedTask={\r\n      title:'',\r\n      desc:'',\r\n      assignedTo:'',\r\n      createdAt:'',\r\n      priority:'',\r\n      status:''\r\n\r\n\r\n    }\r\n  }\r\n\r\n  CloseCreateTaskForm(){\r\n    this.showCreateTaskForm = false;\r\n  }\r\n  CreateOrUpdateTask(data:Task){\r\n    if(!this.editMode)\r\n     this.taskService.CreateTask(data);\r\n    else{\r\n      //task edit\r\n      this.taskService.UpdateTask(this.currentTaskId,data);\r\n    }\r\n\r\n\r\n    // const headers=new HttpHeaders({'my-header':'hello-world'})\r\n  //  this.http.post<{name:string}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',data)\r\n  //  .subscribe((response)=>{\r\n  //   console.log(response);\r\n  //   this.fetchAllTasks();\r\n  //  });\r\n\r\n   \r\n\r\n  } \r\n\r\n  FetchAllTaskClicked(){\r\n    this.fetchAllTasks();\r\n\r\n  }\r\n\r\n  private fetchAllTasks(){\r\n    // this.http.get<{[key:string]:Task}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\r\n    // .pipe(map((response)=>{\r\n\r\n    //   //trasforming data\r\n    //   let tasks=[];\r\n\r\n    //   for(let key in response){\r\n    //     if(response.hasOwnProperty(key)){\r\n    //       tasks.push({...response[key],id:key});\r\n\r\n    //     }\r\n       \r\n    //   }\r\n\r\n    //   return tasks;\r\n\r\n    // }))\r\n    this.taskService.GetAlltasks()\r\n    .subscribe((tasks)=>{\r\n      this.allTasks=tasks;\r\n      // console.log(tasks);\r\n    });\r\n\r\n  }\r\n\r\n  DeleteTask(id:string | undefined){\r\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/'+ id +'.json')\r\n    // .subscribe((res)=>{\r\n    //   this.fetchAllTasks();\r\n    // })\r\n    this.taskService.DeleteTask(id);\r\n\r\n  }\r\n\r\n  DeleteAllTasks(){\r\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\r\n    // .subscribe((res)=>{\r\n    //    this.fetchAllTasks();\r\n\r\n    // })\r\n    this.taskService.DeleteAllTask();\r\n  }\r\n  \r\n  OnEditTaskClicked(id:string |undefined){\r\n    this.currentTaskId=id;\r\n    //open edit task form\r\n    this.showCreateTaskForm=true;\r\n    this.editMode=true; \r\n\r\n   this.selectedTask= this.allTasks.find((task)=>{\r\n      return task.id === id;\r\n\r\n    })\r\n\r\n\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAoB,sBAAsB;AAC7D,SAASC,SAAS,EAAgCC,MAAM,QAAQ,eAAe;AAG/E,SAASC,WAAW,QAAQ,0BAA0B;AAO/C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAAxBC,YAAA;IACL,KAAAC,kBAAkB,GAAY,KAAK;IACnC,KAAAC,IAAI,GAAYL,MAAM,CAACF,UAAU,CAAC;IAClC,KAAAQ,QAAQ,GAAQ,EAAE;IAClB,KAAAC,WAAW,GAAaP,MAAM,CAACC,WAAW,CAAC;IAE3C,KAAAO,QAAQ,GAAS,KAAK;IAGtB,KAAAC,aAAa,GAAQ,EAAE;EA+GzB;EA1GEC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EAEtB;EAGAC,kBAAkBA,CAAA;IAChB,IAAI,CAACR,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACI,QAAQ,GAAC,KAAK;IACnB,IAAI,CAACK,YAAY,GAAC;MAChBC,KAAK,EAAC,EAAE;MACRC,IAAI,EAAC,EAAE;MACPC,UAAU,EAAC,EAAE;MACbC,SAAS,EAAC,EAAE;MACZC,QAAQ,EAAC,EAAE;MACXC,MAAM,EAAC;KAGR;EACH;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAAChB,kBAAkB,GAAG,KAAK;EACjC;EACAiB,kBAAkBA,CAACC,IAAS;IAC1B,IAAG,CAAC,IAAI,CAACd,QAAQ,EAChB,IAAI,CAACD,WAAW,CAACgB,UAAU,CAACD,IAAI,CAAC,CAAC,KAC/B;MACF;MACA,IAAI,CAACf,WAAW,CAACiB,UAAU,CAAC,IAAI,CAACf,aAAa,EAACa,IAAI,CAAC;;IAItD;IACF;IACA;IACA;IACA;IACA;EAIA;;EAEAG,mBAAmBA,CAAA;IACjB,IAAI,CAACd,aAAa,EAAE;EAEtB;EAEQA,aAAaA,CAAA;IACnB;IACA;IAEA;IACA;IAEA;IACA;IACA;IAEA;IAEA;IAEA;IAEA;IACA,IAAI,CAACJ,WAAW,CAACmB,WAAW,EAAE,CAC7BC,SAAS,CAAEC,KAAK,IAAG;MAClB,IAAI,CAACtB,QAAQ,GAACsB,KAAK;MACnB;IACF,CAAC,CAAC;EAEJ;;EAEAC,UAAUA,CAACC,EAAqB;IAC9B;IACA;IACA;IACA;IACA,IAAI,CAACvB,WAAW,CAACsB,UAAU,CAACC,EAAE,CAAC;EAEjC;EAEAC,cAAcA,CAAA;IACZ;IACA;IACA;IAEA;IACA,IAAI,CAACxB,WAAW,CAACyB,aAAa,EAAE;EAClC;EAEAC,iBAAiBA,CAACH,EAAoB;IACpC,IAAI,CAACrB,aAAa,GAACqB,EAAE;IACrB;IACA,IAAI,CAAC1B,kBAAkB,GAAC,IAAI;IAC5B,IAAI,CAACI,QAAQ,GAAC,IAAI;IAEnB,IAAI,CAACK,YAAY,GAAE,IAAI,CAACP,QAAQ,CAAC4B,IAAI,CAAEC,IAAI,IAAG;MAC3C,OAAOA,IAAI,CAACL,EAAE,KAAKA,EAAE;IAEvB,CAAC,CAAC;EAGJ;CACD;AAxHY5B,kBAAkB,GAAAkC,UAAA,EAL9BrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWrC,kBAAkB,CAwH9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}