{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { Component, inject } from '@angular/core';\nimport { TaskService } from '../Services/task.service';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n    this.taskService = inject(TaskService);\n  }\n  ngOnInit() {\n    this.fetchAllTasks();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  CreateTask(data) {\n    this.taskService.CreateTask(data);\n    // const headers=new HttpHeaders({'my-header':'hello-world'})\n    //  this.http.post<{name:string}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',data)\n    //  .subscribe((response)=>{\n    //   console.log(response);\n    //   this.fetchAllTasks();\n    //  });\n  }\n\n  FetchAllTaskClicked() {\n    this.fetchAllTasks();\n  }\n  fetchAllTasks() {\n    // this.http.get<{[key:string]:Task}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\n    // .pipe(map((response)=>{\n    //   //trasforming data\n    //   let tasks=[];\n    //   for(let key in response){\n    //     if(response.hasOwnProperty(key)){\n    //       tasks.push({...response[key],id:key});\n    //     }\n    //   }\n    //   return tasks;\n    // }))\n    this.taskService.GetAlltasks().subscribe(tasks => {\n      this.allTasks = tasks;\n      // console.log(tasks);\n    });\n  }\n\n  DeleteTask(id) {\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/'+ id +'.json')\n    // .subscribe((res)=>{\n    //   this.fetchAllTasks();\n    // })\n    this.taskService.DeleteTask(id);\n  }\n  DeleteAllTasks() {\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\n    // .subscribe((res)=>{\n    //    this.fetchAllTasks();\n    // })\n    this.taskService.DeleteAllTask();\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["HttpClient","Component","inject","TaskService","DashboardComponent","constructor","showCreateTaskForm","http","allTasks","taskService","ngOnInit","fetchAllTasks","OpenCreateTaskForm","CloseCreateTaskForm","CreateTask","data","FetchAllTaskClicked","GetAlltasks","subscribe","tasks","DeleteTask","id","DeleteAllTasks","DeleteAllTask","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-HttpClient\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output, inject } from '@angular/core';\r\nimport { Task } from 'src/Models/Task';\r\nimport{map} from 'rxjs/operators';\r\nimport { TaskService } from '../Services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit{\r\n  showCreateTaskForm: boolean = false;\r\n  http:HttpClient=inject(HttpClient);\r\n  allTasks:Task[]=[];\r\n  taskService:TaskService=inject(TaskService)\r\n\r\n\r\n\r\n\r\n  ngOnInit(){\r\n    this.fetchAllTasks();\r\n\r\n  }\r\n  \r\n\r\n  OpenCreateTaskForm(){\r\n    this.showCreateTaskForm = true;\r\n  }\r\n\r\n  CloseCreateTaskForm(){\r\n    this.showCreateTaskForm = false;\r\n  }\r\n  CreateTask(data:Task){\r\n     this.taskService.CreateTask(data);\r\n    // const headers=new HttpHeaders({'my-header':'hello-world'})\r\n  //  this.http.post<{name:string}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json',data)\r\n  //  .subscribe((response)=>{\r\n  //   console.log(response);\r\n  //   this.fetchAllTasks();\r\n  //  });\r\n\r\n   \r\n\r\n  } \r\n\r\n  FetchAllTaskClicked(){\r\n    this.fetchAllTasks();\r\n\r\n  }\r\n\r\n  private fetchAllTasks(){\r\n    // this.http.get<{[key:string]:Task}>('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\r\n    // .pipe(map((response)=>{\r\n\r\n    //   //trasforming data\r\n    //   let tasks=[];\r\n\r\n    //   for(let key in response){\r\n    //     if(response.hasOwnProperty(key)){\r\n    //       tasks.push({...response[key],id:key});\r\n\r\n    //     }\r\n       \r\n    //   }\r\n\r\n    //   return tasks;\r\n\r\n    // }))\r\n    this.taskService.GetAlltasks()\r\n    .subscribe((tasks)=>{\r\n      this.allTasks=tasks;\r\n      // console.log(tasks);\r\n    });\r\n\r\n  }\r\n\r\n  DeleteTask(id:string | undefined){\r\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks/'+ id +'.json')\r\n    // .subscribe((res)=>{\r\n    //   this.fetchAllTasks();\r\n    // })\r\n    this.taskService.DeleteTask(id);\r\n\r\n  }\r\n\r\n  DeleteAllTasks(){\r\n    // this.http.delete('https://angular-http-client-360ac-default-rtdb.firebaseio.com/tasks.json')\r\n    // .subscribe((res)=>{\r\n    //    this.fetchAllTasks();\r\n\r\n    // })\r\n    this.taskService.DeleteAllTask();\r\n  }\r\n  \r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAoB,sBAAsB;AAC7D,SAASC,SAAS,EAAgCC,MAAM,QAAQ,eAAe;AAG/E,SAASC,WAAW,QAAQ,0BAA0B;AAO/C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAAxBC,YAAA;IACL,KAAAC,kBAAkB,GAAY,KAAK;IACnC,KAAAC,IAAI,GAAYL,MAAM,CAACF,UAAU,CAAC;IAClC,KAAAQ,QAAQ,GAAQ,EAAE;IAClB,KAAAC,WAAW,GAAaP,MAAM,CAACC,WAAW,CAAC;EAgF7C;EA3EEO,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EAEtB;EAGAC,kBAAkBA,CAAA;IAChB,IAAI,CAACN,kBAAkB,GAAG,IAAI;EAChC;EAEAO,mBAAmBA,CAAA;IACjB,IAAI,CAACP,kBAAkB,GAAG,KAAK;EACjC;EACAQ,UAAUA,CAACC,IAAS;IACjB,IAAI,CAACN,WAAW,CAACK,UAAU,CAACC,IAAI,CAAC;IAClC;IACF;IACA;IACA;IACA;IACA;EAIA;;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAACL,aAAa,EAAE;EAEtB;EAEQA,aAAaA,CAAA;IACnB;IACA;IAEA;IACA;IAEA;IACA;IACA;IAEA;IAEA;IAEA;IAEA;IACA,IAAI,CAACF,WAAW,CAACQ,WAAW,EAAE,CAC7BC,SAAS,CAAEC,KAAK,IAAG;MAClB,IAAI,CAACX,QAAQ,GAACW,KAAK;MACnB;IACF,CAAC,CAAC;EAEJ;;EAEAC,UAAUA,CAACC,EAAqB;IAC9B;IACA;IACA;IACA;IACA,IAAI,CAACZ,WAAW,CAACW,UAAU,CAACC,EAAE,CAAC;EAEjC;EAEAC,cAAcA,CAAA;IACZ;IACA;IACA;IAEA;IACA,IAAI,CAACb,WAAW,CAACc,aAAa,EAAE;EAClC;CAED;AApFYnB,kBAAkB,GAAAoB,UAAA,EAL9BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWvB,kBAAkB,CAoF9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}