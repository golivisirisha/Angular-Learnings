{"ast":null,"code":"export class CustomValidators {\n  static noSpaceAllowed(control) {\n    if (control.value != null && control.value.indexOf(' ') != -1) {\n      return {\n        noSpaceAllowed: true\n      };\n    }\n    return null;\n  }\n  static checkUserName(control) {\n    return userNameAllowed(control.value);\n  }\n}\nfunction userNameAllowed(username) {\n  const takenUserNames = ['jhonsmith', 'manojjaha', 'fjsdfbiuas'];\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {});\n  });\n}","map":{"version":3,"names":["CustomValidators","noSpaceAllowed","control","value","indexOf","checkUserName","userNameAllowed","username","takenUserNames","Promise","resolve","reject","setTimeout"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-reactiveForms\\src\\app\\validators\\noSpaceAllowed.validator.ts"],"sourcesContent":["import {AbstractControl, FormControl} from '@angular/forms';\r\n\r\n\r\n\r\n\r\nexport class CustomValidators{\r\n    static noSpaceAllowed(control:FormControl){\r\n        if(control.value != null && control.value.indexOf(' ') != -1){\r\n            return{noSpaceAllowed:true}\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static checkUserName(control:AbstractControl):Promise<any>{\r\n        return userNameAllowed(control.value);\r\n    }\r\n\r\n}\r\n\r\nfunction userNameAllowed(username:string){\r\n    const takenUserNames=['jhonsmith','manojjaha','fjsdfbiuas'];\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        setTimeout(()=>{\r\n            \r\n        })\r\n    })\r\n}\r\n\r\n  "],"mappings":"AAKA,OAAM,MAAOA,gBAAgB;EACzB,OAAOC,cAAcA,CAACC,OAAmB;IACrC,IAAGA,OAAO,CAACC,KAAK,IAAI,IAAI,IAAID,OAAO,CAACC,KAAK,CAACC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;MACzD,OAAM;QAACH,cAAc,EAAC;MAAI,CAAC;;IAE/B,OAAO,IAAI;EACf;EAEA,OAAOI,aAAaA,CAACH,OAAuB;IACxC,OAAOI,eAAe,CAACJ,OAAO,CAACC,KAAK,CAAC;EACzC;;AAIJ,SAASG,eAAeA,CAACC,QAAe;EACpC,MAAMC,cAAc,GAAC,CAAC,WAAW,EAAC,WAAW,EAAC,YAAY,CAAC;EAE3D,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAG;IACjCC,UAAU,CAAC,MAAI,CAEf,CAAC,CAAC;EACN,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}