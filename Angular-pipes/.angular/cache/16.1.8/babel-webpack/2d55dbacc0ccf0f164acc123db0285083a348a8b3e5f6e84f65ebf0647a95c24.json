{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass FilterPipe {\n  transform(list, filterBy) {\n    if (filterBy.toLowerCase() === 'all' || filterBy === '' || list.length === 0) {\n      return list;\n    } else {\n      return list.filter(std => {\n        return std.gender.toLowerCase() === filterBy.toLowerCase();\n      });\n    }\n  }\n}\n_class = FilterPipe;\n_class.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: _class,\n  pure: true\n});\nexport { FilterPipe };","map":{"version":3,"names":["FilterPipe","transform","list","filterBy","toLowerCase","length","filter","std","gender","pure"],"sources":["C:\\Users\\DELL\\Downloads\\gh\\OneDrive\\Desktop\\Sails tasks\\Angular-pipes\\src\\app\\pipes\\filter.pipe.ts"],"sourcesContent":["\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport { Student } from '../Models/Student';\r\n@Pipe({\r\n    name:'filter'\r\n\r\n})\r\n\r\n\r\nexport class FilterPipe  implements PipeTransform{\r\n\r\n    transform(list:Student[],filterBy:string) {\r\n        if(filterBy.toLowerCase() === 'all' || filterBy === '' || list.length ===0){\r\n            return list;\r\n        } else {\r\n            return list.filter((std)=>{\r\n                return std.gender.toLowerCase() === filterBy.toLowerCase();\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n}"],"mappings":";;AAGA,MAMaA,UAAU;EAEnBC,SAASA,CAACC,IAAc,EAACC,QAAe;IACpC,IAAGA,QAAQ,CAACC,WAAW,EAAE,KAAK,KAAK,IAAID,QAAQ,KAAK,EAAE,IAAID,IAAI,CAACG,MAAM,KAAI,CAAC,EAAC;MACvE,OAAOH,IAAI;KACd,MAAM;MACH,OAAOA,IAAI,CAACI,MAAM,CAAEC,GAAG,IAAG;QACtB,OAAOA,GAAG,CAACC,MAAM,CAACJ,WAAW,EAAE,KAAKD,QAAQ,CAACC,WAAW,EAAE;MAC9D,CAAC,CAAC;;EAIV;;SAZSJ,UAAU;;mBAAVA,MAAU;AAAA;;;QAAVA,MAAU;EAAAS,IAAA;AAAA;SAAVT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}